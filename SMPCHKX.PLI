### SMPCHKE ###
%----------------------------  SMP SYSMOD CHECK  -------------------------------
%COMMAND ===>_ZCMD                                                             +
%
+SYSMOD DATA SET:
+   DATA SET NAME %===>_SCPTSDSN                                   +
+   VOLUME SERIAL %===>_SCPTSV+   (If not cataloged)
+
+SMP TARGET ZONE:
+   SMP ZONE NAME %===>_SCZNAME+
+
+SMP GLOBAL ZONE:
+   DATA SET NAME %===>_SCGLBDSN                                   +
+
+SYSPRINT DATA SET:
+   DATA SET NAME %===>_SCSYSDSN                                   +
 +                     (* for terminal output; if dsn, must already exist)
+
+SYSTEM RELEASE IDENTIFIER:
+   SYSREL%===>_SCSYSREL+
+
+SMPCHK PROGRAM TABLE MULTIPLIER:
+   TABLES%===>_SCTAB+
)INIT
  .CURSOR = SCPTSDSN
  .HELP = SMPCHKT
  &ZCMD = ' '
  &SCTAB = '1'
)PROC
  VER (&SCPTSDSN,NB,DSNAME)
  VER (&SCGLBDSN,NB,DSNAME)
  VER (&SCZNAME,NB)
  IF (&SCSYSREL = ' ')
      &SCSYSREL = 'Z038'
  IF (&SCSYSDSN = ' ')
      &SCSYSDSN = '*'
  IF (&SCSYSDSN ª= '*')
      VER (&SCSYSDSN,DSNAME)
  IF (&SCTAB = ' ')
      &SCTAB = '1'
  VER (&SCTAB,RANGE,1,9)
  VPUT (SCPTSDSN,SCPTSV,SCGLBDSN,SCZNAME,SCSYSREL,SCSYSDSN) PROFILE
)END
### SMPCHK4 ###
%----------------------------  SMP SYSMOD CHECK  -------------------------------
%COMMAND ===>_ZCMD                                                             +
%
+SYSMOD DATA SET:
+   DATA SET NAME %===>_SCPTSDSN                                   +
+   VOLUME SERIAL %===>_SCPTSV+   (If not cataloged)
+
+SMPCDS DATA SET:
+   DATA SET NAME %===>_SCCDSDSN                                   +
+   VOLUME SERIAL %===>_SCCDSV+   (If not cataloged)
+
+SYSPRINT DATA SET:
+   DATA SET NAME %===>_SCSYSDSN                                   +
 +                     (* for terminal output; if dsn, must already exist)
+
+SYSTEM RELEASE IDENTIFIER:
+   SYSREL%===>_SCSYSREL+
+
+SMPCHK PROGRAM TABLE MULTIPLIER:
+   TABLES%===>_SCTAB+
)INIT
  .CURSOR = SCPTSDSN
  .HELP = SMPCHKT
  &ZCMD = ' '
  &SCTAB = '1'
)PROC
  VER (&SCPTSDSN,NB,DSNAME)
  VER (&SCCDSDSN,NB,DSNAME)
  VER (&SCCDSV,NB)
  IF (&SCSYSREL = ' ')
      &SCSYSREL = 'Z038'
  IF (&SCSYSDSN = ' ')
      &SCSYSDSN = '*'
  IF (&SCSYSDSN ª= '*')
      VER (&SCSYSDSN,DSNAME)
  IF (&SCTAB = ' ')
      &SCTAB = '1'
  VER (&SCTAB,RANGE,1,9)
  VPUT (SCPTSDSN,SCPTSV,SCCDSDSN,SCCDSV,SCSYSREL,SCSYSDSN) PROFILE
)END
### SMPCHKT ###
%TUTORIAL--------------------  SMP SYSMOD CHECK  -----------------------TUTORIAL
%
+ APPLY PROCESSING IS OPEN TO UNDETECTED REGRESSION WHEN THE VERSION OR DELETE
+ KEYWORD OCCURS IN A SYSMOD.  SMPCHK LOOKS AT THE LASTUPD, RMID AND UMID OF
+ THE ELEMENTS WHICH WILL BE REPLACED FROM THE TARGET SYSTEM BY THE SYSMOD.  IF
+ THE SYSMOD SUPS OR VERSIONS WHAT IS IN THOSE FIELDS NO REGRESSION WILL RESULT.
+ IF IT IS NOT FOUND AT ALL IN THE SYSMOD IT MAY BE REGRESSED AND SMP WOULD NOT
+ BE AWARE OF THE REGRESSION.  IF IT ONLY PRES OR REQS THEM THERE IS POSSIBLE
+ REGRESSION, THOUGH UNLIKELY.  MESSAGES ARE PRODUCED FOR THE LAST TWO CASES.
+ ERROR MESSAGES START WITH%"***".+ INFOMATION MESSAGES START WITH%"<<<".
%
% MSG FORMAT: +SYSMOD    FIELD  TYPE   ELEMENT  COND          FMID    FCOND
% EXAMPLES:   +AZ99999   UMID - MODULE ISTCVXXX NOT FOUND   - JBB1126 VERSIONED
+              AZ99999   RMID - MACRO  ISTCVXXX IN PRE LIST - JBB3214 UNKNOWN
+              UZ99999   LUPD - SOURCE ISTCVXXX IN REQ LIST - JBB2375 VER FMID
% DEFINE: +SYSMOD  - SYSMOD WHICH MAY BE REGRESSED BY APPLY PROCESSING.
+          FIELD   - THE TYPE OF PROCESSING THE SYSMOD DID TO THE ELEMENT.
+          TYPE    - MACRO, MODULE OR SOURCE ELEMENT OF REPLACING SYSMOD.
+          ELEMENT - THE NAME OF THE MACRO, MODULE OR SOURCE.
+          COND    - THE SYSMOD'S RELATIONSHIP TO THE REPLACING SYSMOD.
+          FMID    - THE FMID OF THE ELEMENT CURRENTLY.
+          FCOND   - RELATIONSHIP OF REPLACING SYSMOD TO CURRENT ELEMENT'S FMID.
)END
### SMPCHK0 ###
PROC 0 SMP4
IF &SMP4 = +
    THEN ISPEXEC DISPLAY PANEL(SMPCHKE)
    ELSE ISPEXEC DISPLAY PANEL(SMPCHK4)
SET &HOLDCC = &LASTCC
ALLOC F(SMPLIST) SP(5,5) CYL UNIT(VIO) REUSE RECFM(F B) BLKSIZE(121)
ALLOC F(SMPCNTL) SP(5,5) TR  UNIT(VIO) REUSE
ALLOC F(SMPLOG) DUMMY REUSE
ALLOC F(SMPOUT) DUMMY REUSE
ALLOC F(SMPRPT) DUMMY REUSE
DO WHILE(&HOLDCC = 0)
    ALLOC F(SYSPRINT) DA(&SCSYSDSN) SHR REUSE
    IF &SCPTSV = +
        THEN ALLOC F(PTSSMP) DA(&SCPTSDSN) SHR REUSE
        ELSE ALLOC F(PTSSMP) DA(&SCPTSDSN) SHR REUSE +
                 UNIT(SYSALLDA) VOL(&SCPTSV)
    IF &SMP4 = +
        THEN DO
             ALLOC F(SMPCSI) DA(&SCGLBDSN) SHR REUSE
             CALL 'SYS4.FOS.LOAD(SMPCHK)' +
             '/SYSREL=''&SCSYSREL'',TARGET=''&SCZNAME'',TABLES=&SCTAB'
             ISPEXEC DISPLAY PANEL(SMPCHKE)
             END
        ELSE DO
             IF &SCCDSV = +
                 THEN ALLOC F(SMPCDS) DA(&SCCDSDSN) SHR REUSE
                 ELSE ALLOC F(SMPCDS) DA(&SCCDSDSN) SHR REUSE +
                          UNIT(SYSALLDA) VOL(&SCCDSV)
             CALL 'SYS4.FOS.LOAD(SMPCHK)' +
                 '/SYSREL=''&SCSYSREL'',TABLES=&SCTAB'
             ISPEXEC DISPLAY PANEL(SMPCHK4)
             END
    SET &HOLDCC = &LASTCC
    END
FREE F(SMPLIST,SMPCNTL)
